---
- name: Ensure local groups exist
  ansible.builtin.group:
    name: "{{ item.name }}"
    gid: "{{ item.gid }}"
    state: present
  when:
    - local_groups is defined
  loop: "{{ local_groups | list }}"
- name: Ensure local users exist
  ansible.builtin.user:
    name: "{{ item.name }}"
    state: present
    update_password: 'on_create'
    password: "{{ item.password }}"
    uid: "{{ item.uid }}"
    group: "{{ item.group | default(omit) }}"
    comment: "{{ item.comment | default(omit) }}"
    groups: "{{ item.groups | default(omit) }}"
    append: "{{ (item.groups is defined) | ternary(true, omit) }}"
  when:
    - local_users is defined
    - item.name in enabled_users
  loop: "{{ local_users | list }}"
- name: Ensure admin users are in the wheel group
  ansible.builtin.user:
    name: "{{ item.name }}"
    state: present
    groups: wheel
    append: true
  when:
    - local_users is defined
    - item.name in admin_users
  loop: "{{ local_users | list }}"
- name: Ensure non-admin users are NOT in the wheel group
  ansible.builtin.command:
    argv:
      - 'gpasswd'
      - '-d'
      - "{{ item.name }}"
      - 'wheel'
  changed_when: gpw.rc == 0
  failed_when: gpw.rc != 0 and gpw.rc != 3
  register: gpw
  when:
    - local_users is defined
    - item.name in enabled_users
    - item.name not in admin_users
  loop: "{{ local_users | list }}"
- name: Ensure local users not in enabled users are removed
  ansible.builtin.user:
    name: "{{ item.name }}"
    state: absent
  when:
    - local_users is defined
    - item.name not in enabled_users
  loop: "{{ local_users | list }}"
