---
- name: Ensure the ansible controller is configured
  hosts: localhost
  become: true
  tasks:
    - name: Ensure the ansible user has a keypair
      ansible.builtin.user:
        name: ansible
        generate_ssh_key: true
        ssh_key_bits: 4096
        ssh_key_comment: ansible@localhost
        ssh_key_file: .ssh/ansible
  tags:
    - controller
- name: Ensure all hosts have the same standard operating environment
  hosts: all
  vars_files:
    - "{{ lookup('env','HOME') }}/.site_data"
  remote_user: "{{ provisioning.username }}"
  become: true
  gather_facts: true
  roles:
    - baseline
  tags:
    - baseline
- name: Ensure local accounts are created
  hosts: all
  vars_files:
    - "{{ lookup('env','HOME') }}/.site_data"
  remote_user: "{{ provisioning.username }}"
  become: true
  roles:
    - local-accounts
  tags:
    - local-accounts
- name: Ensure autofs is configured on nasclients
  hosts: nasclients
  vars_files:
    - "{{ lookup('env','HOME') }}/.site_data"
  remote_user: "{{ provisioning.username }}"
  become: true
  roles:
    - autofs
  tags:
    - autofs
- name: Ensure mirror hosts are configured
  hosts: mirrors
  vars_files:
    - "{{ lookup('env','HOME') }}/.site_data"
  remote_user: "{{ provisioning.username }}"
  become: yes
  roles:
    - mirror
  tags:
    - mirror
- name: Ensure minikube is installed on machines use for k8s development
  hosts: minikube
  vars_files:
    - "{{ lookup('env','HOME') }}/.site_data"
  remote_user: "{{ provisioning.username }}"
  become: true
  roles:
    - minikube
  tags:
    - minikube
    - testing
- name: Ensure software for hosting containers is installed
  hosts: container_hosts
  vars_files:
    - "{{ lookup('env','HOME') }}/.site_data"
  remote_user: "{{ provisioning.username }}"
  become: true
  roles:
    - podman
  tags:
    - podman
- name: Ensure netbox servers are configured
  hosts: netbox
  vars_files:
    - "{{ lookup('env','HOME') }}/.site_data"
  remote_user: "{{ provisioning.username }}"
  become: true
  roles:
    - netbox
  tags:
    - netbox
- name: Ensure dnsmasq servers are configured
  hosts: dnsmasq_servers
  vars_files:
    - "{{ lookup('env','HOME') }}/.site_data"
  remote_user: "{{ provisioning.username }}"
  become: true
  roles:
    - dnsmasq
  tags:
    - dnsmasq
- name: Configure Fedora installs as Workstations
  hosts: workstations
  vars_files:
    - "{{ lookup('env','HOME') }}/.site_data"
  remote_user: "{{ provisioning.username }}"
  become: true
  roles:
    - fedora-workstation
  tags:
    - fedora-workstation
- name: Configure custom browsers
  hosts: workstations
  vars_files:
    - "{{ lookup('env','HOME') }}/.site_data"
  remote_user: "{{ provisioning.username }}"
  become: true
  roles:
    - custombrowsers
  tags:
    - custombrowsers
- name: Configure Steam
  hosts: workstations
  vars_files:
    - "{{ lookup('env','HOME') }}/.site_data"
  remote_user: "{{ provisioning.username }}"
  become: true
  roles:
    - steam
  tags:
    - steam
