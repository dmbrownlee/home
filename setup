#!/bin/bash
PLATFORM="$(uname)"
# This script installs Ansible if it is not already installed and then runs the
# setup playbook to configure the workstation.

VPWFILE="$HOME/.vaultpw"

if [ ! -f $VPWFILE ]; then
  read -s -p "Vault Password: " VPW
  touch "$VPWFILE"
  chmod 0600 "$VPWFILE"
  echo "$VPW" > "$VPWFILE"
fi

APARGS="--vault-password-file $VPWFILE $APARGS -K -l localhost, -c release -U https://github.com/dmbrownlee/home.git"

cat <<DONE
=========================================================================
Verifying network connectivity.
=========================================================================
DONE
ping -q -c 1 8.8.8.8
if [[ $? -ne 0 ]]; then
  echo "Unable to reach the Internet.  Please check your network connectivity."
  exit 1;
fi
echo

# ============================================================================
# ==
# ==  Ensure prerequisite software is installed on each platform
# ==
# ============================================================================
# On Mac, Homebrew is the package manager of choice
if [ "$PLATFORM" == "Darwin" ]; then
  which -s brew
  if [[ $? -ne 0 ]]; then
    cat <<DONE
  =========================================================================
  Installing homebrew.
  =========================================================================
DONE
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    # Also, use brew to install git (rather than use the older version in XCode)
    cat <<DONE
    =========================================================================
    Installing git.
    =========================================================================
DONE
    brew install git
  fi
fi

which -s ansible-playbook
if [[ $? -ne 0 ]]; then
  cat <<DONE
  =========================================================================
  Installing ansible.
  =========================================================================
DONE
  case "$PLATFORM" in
    "Darwin")
      brew install ansible
      ;;
    "Linux")
      if [[ -f /etc/debian_version ]]; then
        if [[ ! -x /usr/local/bin/pip3 ]]; then
          sudo apt install -y python3-pip
        fi
      elif [[ -f /etc/rocky-release ]]; then
        if [[ ! -x /usr/bin/pip3 ]]; then
          sudo yum install -y epel-release
          sudo yum update -y
          sudo yum install -y ansible
        fi
      fi
      ;;
    "*")
      echo "This setup script does not work with your host operating system."
      exit 1
      ;;
  esac
fi

# Do all remaining configuration with Ansible playbook
cat <<DONE
=========================================================================
Running Ansible playbook
=========================================================================
DONE
ansible-pull $APARGS
