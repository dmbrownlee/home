---
- name: Ensure the K3S runtime directory exists
  ansible.builtin.file:
    path: /var/lib/rancher/k3s
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: true
- name: Ensure the K3S server manifests directory (different mode) exists
  ansible.builtin.file:
    path: /var/lib/rancher/k3s/server/manifests
    state: directory
    owner: root
    group: root
    mode: '0700'
  become: true
- name: Ensure the kube-vip RBAC manifest exists
  ansible.builtin.get_url:
    dest: /var/lib/rancher/k3s/server/manifests/kube-vip-rbac.yaml
    url: https://kube-vip.io/manifests/rbac.yaml
    owner: root
    group: root
    mode: '0600'
  become: true
- name: Ensure the kube-vip DaemonSet manifest exists
  ansible.builtin.template:
    dest: /var/lib/rancher/k3s/server/manifests/kube-vip-daemonset.yaml
    src: kube-vip-daemonset.yaml.j2
    owner: root
    group: root
    mode: '0600'
  become: true
- name: Ensure the K3S configuration file exists
  ansible.builtin.template:
    dest: /etc/rancher/k3s/config.yaml
    src: k3s.config.yaml.j2
    owner: root
    group: root
    mode: '0644'
  become: true
- name: Ensure initial cluster server is installed
  ansible.builtin.shell:
    cmd: curl -sfL https://get.k3s.io | sh -s - server --cluster-init
  args:
    creates: /etc/systemd/system/k3s.service
  become: true
  register: k3s_installation
- name: Ensure K3S service is started
  ansible.builtin.systemd:
    name: k3s
    state: started
    enabled: true
    daemon_reload: true
  become: true
- name: Ensure K3S is up before continuing
  kubernetes.core.k8s_info:
    kind: Service
    name: kubernetes
    namespace: default
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    wait: yes
    wait_sleep: 10
    wait_timeout: 360
  become: true

# Configure kube-vip
- name: Download kube-vip-cloud-provider manifest to the cluster.
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/kube-vip/kube-vip-cloud-provider/main/manifest/kube-vip-cloud-controller.yaml
    dest: "/root/kube-vip-cloud-provider.yaml"
    mode: '0664'
  become: true
- name: Apply kube-vip-cloud-provider manifest to the cluster.
  kubernetes.core.k8s:
    state: present
    src: "/root/kube-vip-cloud-provider.yaml"
    kubeconfig: /etc/rancher/k3s/k3s.yaml
  become: true

# Propagate kubeconfig
- name: Ensure ansible user has a ~/.kube directory
  ansible.builtin.file:
    path: /home/ansible/.kube
    state: directory
    owner: ansible
    group: ansible
    mode: '0700'
- name: Ensure ansible user has kubectl setup
  ansible.builtin.copy:
    src: /etc/rancher/k3s/k3s.yaml
    dest: /home/ansible/.kube/config
    remote_src: true
    owner: ansible
    group: ansible
    mode: '0600'
  become: true
  when: k3s_installation.changed
- name: Ensure git is installed for helm plugins
  ansible.builtin.apt:
    name:
      - git
    lock_timeout: 180
  become: true
- name: Ensure helm is installed
  ansible.builtin.shell:
    cmd: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  args:
    creates: /usr/local/bin/helm
  become: true
- name: Ensure local kubeconfig is downloaded from initial control plane node
  ansible.builtin.fetch:
    src: /etc/rancher/k3s/k3s.yaml
    dest: "{{ k3s_local_kubeconfig_path }}"
    mode: '0600'
    flat: yes
  become: true
  when: k3s_installation.changed
- name: Ensure localhost address is replaced in the downloaded kubeconfig
  ansible.builtin.lineinfile:
    path: "{{ k3s_local_kubeconfig_path }}"
    regexp: '^( *server: )https://127.0.0.1:6443$'
    line: '\1{{ k3s_api_url }}'
    backrefs: true
  become: true
  when: k3s_installation.changed
  delegate_to: localhost
- name: Ensure command completion for kubectl and helm are setup in bashrc file
  ansible.builtin.blockinfile:
    path: /home/ansible/.bashrc
    block: |
      export KUBECONFIG=$HOME/.kube/config
      source <(kubectl completion bash)
      source <(helm completion bash)
