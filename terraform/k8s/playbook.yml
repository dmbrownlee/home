---
- name: Prepare k8s nodes
  hosts: all
  become: yes
  tasks:
    - name: Ensure package cache and default system packages are up to date
      ansible.builtin.apt:
        update_cache: yes
        upgrade: yes
        autoclean: yes
        cache_valid_time: 3600
    - name: Ensure GPG and some other handy items are installed
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - bash-completion
          - ca-certificates
          - curl
          - git
          - gnupg
          - vim
    - name: Ensure the GPG key for the docker apt repo is installed
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/debian/gpg
        keyring: /etc/apt/trusted.gpg.d/docker.gpg
    - name: Ensure the GPG key for the kubernetes apt repo is installed
      ansible.builtin.apt_key:
        url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        keyring: /etc/apt/trusted.gpg.d/kubernetes.gpg
    - name: Ensure docker registry is configured
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.gpg] https://download.docker.com/linux/debian bookworm stable
        filename: docker
      register: docker_repo
    - name: Ensure kubernetes registry is configured
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/kubernetes.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /
        filename: kubernetes
      register: kubernetes_repo
    # - name: Wait until the lock file is removed
    #     ansible.builtin.wait_for:
    #       path: /var/lock/file.lock
    #       state: absent
    - name: Ensure package cache and default system packages are up to date
      ansible.builtin.apt:
        update_cache: yes
      when: docker_repo.changed or kubernetes_repo.changed
    - name: Ensure the overlay kernel module is loaded at boot
      community.general.modprobe:
        name: overlay
        state: present
        persistent: present
    - name: Ensure the br_netfilter kernel module is loaded at boot
      community.general.modprobe:
        name: br_netfilter
        state: present
        persistent: present
    - name: Ensure IPv4 forwarding is enabled in kernel
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: true
        state: present
        reload: true
    - name: Ensure net filtering is enabled on IPv4 bridge
      ansible.posix.sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: '1'
        sysctl_set: true
        state: present
        reload: true
    - name: Ensure net filtering is enabled on IPv6 bridge
      ansible.posix.sysctl:
        name: net.bridge.bridge-nf-call-ip6tables
        value: '1'
        sysctl_set: true
        state: present
        reload: true
    - name: Ensure IPv4 forwarding is enabled in kernel
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: true
        state: present
        reload: true
    - name: Ensure containerd is installed
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
    - name: Ensure containerd is configured correctly
      ansible.builtin.template:
        dest: /etc/containerd/config.toml
        owner: root
        group: root
        mode: '-644'
        src: config.toml.j2
      register: containerd_config
    - debug:
        var: containerd_config
    - name: Ensure containerd is restarted if its configuration changed
      ansible.builtin.systemd:
        name: containerd
        state: restarted
      when: containerd_config.changed
    - name: Ensure the kubernetes CLI tools are installed
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
